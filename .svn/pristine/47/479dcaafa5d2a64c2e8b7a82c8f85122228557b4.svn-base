package ui;


import edu.wm.cs.cs301.amazebyvjdavey.R;
import falstad.Maze;
import falstad.globals;
import android.support.v7.app.ActionBarActivity;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.*;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.CompoundButton.OnCheckedChangeListener;
import android.widget.SeekBar.OnSeekBarChangeListener;

public class MainActivity extends ActionBarActivity {

	public final static String EXTRA_MESSAGE = "message";
	SeekBar sb;
	TextView tv;
	Spinner generator;
	Spinner driver;
	CheckBox cb;
	Maze maze;
	//following parameters set to 0 as a default in the event the user makes no selections
	int skill = 0;
	int driverAlgorithm = 0;
	int mazebuilderAlgorithm = 0;
	private static final String LOGTAG = "MainActivity";
	
	
	//onCreate adjusted to match my specifications. One Seekbar, Two Spinners, and a Checkbox
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		Intent intent = getIntent();
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		sb =(SeekBar)findViewById(R.id.seekBar1);
		tv =(TextView)findViewById(R.id.textView4);
		driver=(Spinner)findViewById(R.id.Spinner01);
		generator =(Spinner)findViewById(R.id.spinner1);
		cb =(CheckBox)findViewById(R.id.checkBox1);
		Log.v(LOGTAG, "onCreate");
		
		//adjustments for the seekbar
		sb.setMax(15);
		//seekbar listener -- currently makes toasts
		sb.setOnSeekBarChangeListener(new OnSeekBarChangeListener() {
			
			@Override
			public void onStopTrackingTouch(SeekBar seekBar) {
				// TODO Auto-generated method stub
				Toast.makeText(getApplicationContext(), "stop sliding", Toast.LENGTH_SHORT).show();
				Log.v(LOGTAG, "stop sliding");
			}
			
			@Override
			public void onStartTrackingTouch(SeekBar seekBar) {
				// TODO Auto-generated method stub
				Toast.makeText(getApplicationContext(), "start sliding", Toast.LENGTH_SHORT).show();
				Log.v(LOGTAG, "start sliding");
			}
			
			@Override
			public void onProgressChanged(SeekBar seekBar, int progress,
					boolean fromUser) {
				// TODO Auto-generated method stub
				tv.setText(progress+"/"+sb.getMax());
				skill = progress;
			}
		});
		
		//adjustments for the spinners
		//adapters
		ArrayAdapter<CharSequence> gen_adapter = ArrayAdapter.createFromResource(this, R.array.maze_generators, android.R.layout.simple_spinner_item);
		gen_adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
		
		ArrayAdapter<CharSequence> drive_adapter = ArrayAdapter.createFromResource(this, R.array.robot_drivers, android.R.layout.simple_spinner_item);
		drive_adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
		
		//set adapters
		generator.setAdapter(gen_adapter);
		driver.setAdapter(drive_adapter);
		
		//spinner listeners -- currently makes toasts
		generator.setOnItemSelectedListener(new OnItemSelectedListener() {

			@Override
			public void onItemSelected(AdapterView<?> parent, View view,
					int position, long id) {
				// TODO Auto-generated method stub
				Toast.makeText(getApplicationContext(), "Item Selected", Toast.LENGTH_SHORT).show();
				Log.v(LOGTAG, "Item selected");
				mazebuilderAlgorithm = position;
				
			}

			@Override
			public void onNothingSelected(AdapterView<?> parent) {
				// TODO Auto-generated method stub
				Toast.makeText(getApplicationContext(), "Nothing Selected", Toast.LENGTH_SHORT).show();
				
			}
		});
		driver.setOnItemSelectedListener(new OnItemSelectedListener() {

			@Override
			public void onItemSelected(AdapterView<?> parent, View view,
					int position, long id) {
				// TODO Auto-generated method stub
				Toast.makeText(getApplicationContext(), "Item Selected", Toast.LENGTH_SHORT).show();
				Log.v(LOGTAG, "Item Selected");
				driverAlgorithm = position;
				
			}

			@Override
			public void onNothingSelected(AdapterView<?> parent) {
				// TODO Auto-generated method stub
				Toast.makeText(getApplicationContext(), "Nothing Selected", Toast.LENGTH_SHORT).show();
				
			}
		});
	
		//checkbox for file mazes
		cb.setOnCheckedChangeListener(new OnCheckedChangeListener() {
			
			@Override
			public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
				Toast.makeText(getApplicationContext(), "File Loader Checked", Toast.LENGTH_SHORT).show();
				Log.v(LOGTAG, "File Loader Checked");
				
			}
		});
		
		globals.createMaze(this);//edit such that instead of having a maze which takes contets, I just pull the information from the widgets once the start button is clicked
		maze = globals.maze;
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// Handle action bar item clicks here. The action bar will
		// automatically handle clicks on the Home/Up button, so long
		// as you specify a parent activity in AndroidManifest.xml.
		int id = item.getItemId();
		if (id == R.id.action_settings) {
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
	//method for onClick of the start button. Creates the GeneratingActivity with the given user input
	public void gotoActivity(View v) {
		Log.v(LOGTAG, "taking parameters to construct maze");
		Intent intent = new Intent(this, GeneratingActivity.class);
		intent.putExtra("skill", skill);
		intent.putExtra("driverAlgorithm", driverAlgorithm);
		intent.putExtra("mazebuilderAlgorithm", mazebuilderAlgorithm);
		Toast.makeText(getApplicationContext(), "Starting", Toast.LENGTH_SHORT).show();
		Log.v(LOGTAG, "Activity Switch to Generating Activity");
		startActivity(intent);
		Log.v(LOGTAG, "Activity Switch to Generating Activity");
	}
}

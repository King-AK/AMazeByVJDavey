package edu.wm.cs.cs301.amazebyvjdavey;

import android.content.Intent;
import android.os.Bundle;
import android.support.v7.app.ActionBar;
import android.support.v7.app.ActionBarActivity;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Toast;
import android.widget.ToggleButton;


public class PlayActivity extends ActionBarActivity {
	private static final String LOGTAG = "PlayActivity";
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.play_activity);
	}
	
	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// TODO Auto-generated method stub
		getMenuInflater().inflate(R.menu.play_activity_actions, menu);
		return true;
	}
	
	/*
	 * Methods for movement. Called by a button push from play_activity.xml
	 * Toasts and Logs only for now.
	 */
	public void rotateLeft (View v) {
		Toast.makeText(getApplicationContext(), "Turning left", Toast.LENGTH_SHORT).show();
		Log.v(LOGTAG, "rotateLeft");
	}
	public void rotateRight(View v){
		Toast.makeText(getApplicationContext(), "Turning Right", Toast.LENGTH_SHORT).show();
		Log.v(LOGTAG, "rotateRight");
	}
	public void moveAhead (View v){
		Toast.makeText(getApplicationContext(), "Stepping Forward", Toast.LENGTH_SHORT).show();
		Log.v(LOGTAG, "moveAhead");
	}
	public void moveBack (View v){
		Toast.makeText(getApplicationContext(), "Stepping Backward", Toast.LENGTH_SHORT).show();
		Log.v(LOGTAG, "moveBack");
	}
	/* method for the toggle button. this will pause the game if the robot is traveling automatically. 
	 * toasts and logs only for now
	 */
	public void pauseGame (View v){
		// Is the toggle on?
	    boolean on = ((ToggleButton) v).isChecked();
	    
	    if (on) {
	    	Toast.makeText(getApplicationContext(), "Pausing Game", Toast.LENGTH_SHORT).show();
			Log.v(LOGTAG, "pauseGame");
	    } else {
	    	Toast.makeText(getApplicationContext(), "Resuming Game", Toast.LENGTH_SHORT).show();
			Log.v(LOGTAG, "pauseGame");
	    }

	}
	/*
	 * methods for the menu buttons. Currently only show toasts, but will show the overhead views of the Maze, Solution and Visible Walls 
	 * when falstad code is ported.
	 */
	public void showMaze(MenuItem i){
		Toast.makeText(getApplicationContext(), "Toggle Showing Maze Overhead View", Toast.LENGTH_SHORT).show();
		Log.v(LOGTAG, "showingMaze");
	}
	public void showSolution(MenuItem i){
		Toast.makeText(getApplicationContext(), "Toggle Showing Maze Solution", Toast.LENGTH_SHORT).show();
		Log.v(LOGTAG, "showingSolution");
	}
	public void showWalls(MenuItem i){
		Toast.makeText(getApplicationContext(), "Toggle Showing Visible Walls", Toast.LENGTH_SHORT).show();
		Log.v(LOGTAG, "showingWalls");
	}
	
	/*
	 * method for the onClick of the temporary shortcut button. When Falstad Code is ported, this will depend on 
	 * battery level, broken status, and outside of maze status of the robot.
	 *  Jumps to the FinishState.
	 */
	public void goToFinish(View v) {
		Intent intent = new Intent(this, FinishActivity.class);
		startActivity(intent);
		Toast.makeText(getApplicationContext(), "Jumping to Finish", Toast.LENGTH_SHORT).show();
		Log.v(LOGTAG, "Switching to FinishActivity");
		this.finish();
		Log.v(LOGTAG, "PlayActivity Finished");
	}
	

}
